{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Navigation/Toolbar/Toolbar.css","components/UI/Modal/Modal.css","components/Burger/OrderSummary/OrderSummary.css","hoc/Layout/Layout.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","containers/App.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Spinner/Spinner.css","containers/BurgerBuilder/BurgerBuilder.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","hoc/Aux/Aux.js","hoc/WithClass/withClass.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/UI/Modal/Modal.js","hoc/withErrorHandler/withErrorHandler.js","axios.js","store/actions/order.js","store/actions/actionsTypes.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/App.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","serviceWorker.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","SideDrawer","Open","Close","Logo","BuildControl","Label","Less","More","Input","InputElement","Invalid","ValidationError","Toolbar","DesktopOnly","Modal","show","doNotShow","OrderSummary__header","OrderSummary__body","Layout","content","BuildControls","OrderButton","Button","Success","Danger","App","__webpack_require__","p","NavigationItem","active","NavigationItems","DrawerToggle","Backdrop","Burger","Spinner","sk-rotateplane","BurgerBuilder","CheckoutSummary","ContactData","Order","aux","props","children","withClass","WrappedComponent","className","react_default","a","createElement","logo","classes","style","height","src","burgerLogo","alt","navigationItem","react_router_dom","to","link","exact","navigationItems","NavigationItem_NavigationItem","drawerToggle","onClick","clicked","toolbar","DrawerToggle_DrawerToggle","toggle","Logo_Logo","NavigationItems_NavigationItems","backdrop","sideDrawer","attachedClass","open","Aux","Backdrop_Backdrop","closed","join","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Component","nextProps","nextState","modalClose","withErrorHandler","axios","_Component","_temp","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errorConfirmedHandler","error","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","inherits","createClass","key","value","console","log","eject","UI_Modal_Modal","message","instance","create","baseURL","purchaseBurgerSuccess","id","orderData","type","orderId","BurgerIngredient","ingredient","withRouter","transformedIngredients","keys","ingredients","map","ingKey","toConsumableArray","Array","_","index","Burger_BurgerIngredient_BurgerIngredient","reduce","arr","el","concat","length","label","remove","disabled","add","controls","price","toFixed","control","BuildControl_BuildControl","addIngredient","bind","removeIngredient","purchasable","ordered","button","btnType","OrderSummary","ingredientSummary","ingredientKey","span","Button_Button","purchaseCancel","purchaseContinue","spinner","totalPrice","purchasing","updatePurchaseState","total","ingreditentValue","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","push","onInitIngredients","disabledInfo","objectSpread","ings","orderSummary","burger","Spinner_Spinner","Burger_OrderSummary_OrderSummary","Burger_Burger","BuildControls_BuildControls","onAddIngredient","onRemoveIngredient","connect","burgerBuilder","dispatch","ingredientName","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","get","sent","data","t0","stop","_x","apply","arguments","checkoutSummary","width","margin","cancelOrder","continueOrder","input","inputElement","validationError","inputClasses","invalid","shouldValidate","touched","elementType","assign","elementConfig","defaultValue","onChange","changed","selectOptions","options","option","displayValue","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","loading","orderHandler","event","preventDefault","formData","formElementIdentifier","order","onOrderBurger","checkValidity","rules","isValid","trim","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","renderInputs","accumulator","_loop","Input_Input","inputs","form","onSubmit","orders","post","actions","Checkout","cancelCheckoutHandler","goBack","continueCheckoutHandler","replace","summary","react_router","purchasedRedirect","purchased","CheckoutSummary_CheckoutSummary","path","match","component","amount","ingredientsOutput","display","textTransform","border","padding","parseFloat","Orders","onFetchOrders","Order_Order","_ref2","_callee2","fetchedOrders","_context2","_x2","hoc_Layout_Layout","from","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","undefined","action","updatedIngredient","defineProperty","updatedState","updatedIngredient2","updatedState2","newOrder","Boolean","window","location","hostname","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducers","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","es","src_containers_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6d8346b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop__10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1__3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2__1cUso\",\"Meat\":\"BurgerIngredient__Meat__13nAN\",\"Cheese\":\"BurgerIngredient__Cheese__1FxeY\",\"Salad\":\"BurgerIngredient__Salad__1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon__3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__21TuB\",\"Open\":\"SideDrawer__Open__1pVYR\",\"Close\":\"SideDrawer__Close__3Yv1l\",\"Logo\":\"SideDrawer__Logo__3TkPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\",\"ValidationError\":\"Input__ValidationError__1ElSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2JJW-\",\"Logo\":\"Toolbar__Logo__1efBD\",\"DesktopOnly\":\"Toolbar__DesktopOnly__WADUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\",\"show\":\"Modal__show__2I0kq\",\"doNotShow\":\"Modal__doNotShow__a11_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderSummary__header\":\"OrderSummary__OrderSummary__header__2RPJ-\",\"OrderSummary__body\":\"OrderSummary__OrderSummary__body__1eC0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout__2C2_c\",\"content\":\"Layout__content__2uzgd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__2NQx7\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__19WaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__23bcu\",\"active\":\"NavigationItem__active__2zJdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems___yd_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__26to0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner__Spinner__1fiyk\",\"sk-rotateplane\":\"Spinner__sk-rotateplane__28ili\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BurgerBuilder\":\"BurgerBuilder__BurgerBuilder__1gdQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1J81r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\"};","// Auxiliary component that returns elements wrapped within.\nconst aux = props => props.children;\n\nexport default aux;","import React from 'react'\n\n// Returns a wrapped a component with a given style class.\n// the component has its properties and content preserved.  \nconst withClass = (WrappedComponent, className) => {\n    return props => (\n        <div className={className}>\n            <WrappedComponent {...props} />\n        </div>\n    );\n}\n\nexport default withClass;\n","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png';\n\nimport classes from './Logo.css';\n\nconst logo = props => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={burgerLogo} alt=\"Burger Logo\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.css';\n\nconst navigationItem = props => (\n    <li className={classes.NavigationItem}>\n        <NavLink to={props.link} exact={props.exact}> {/*activeClassName={classes.active} makes the link looks 'active' by default*/}\n            {props.children}\n        </NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nimport classes from './NavigationItems.css';\n\nconst navigationItems = props => ( // first item activated by default\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/burger-builder\">Burger Builder</NavigationItem>\n        <NavigationItem link=\"/orders\" exact>Orders</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.css';\n\nconst drawerToggle = props => (\n    <div\n        className={classes.DrawerToggle}\n        onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nimport classes from './Toolbar.css';\n\nconst toolbar = props => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.toggle}>Menu</DrawerToggle>\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        \n        <nav className={classes.DesktopOnly}>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport classes from './Backdrop.css';\n\nconst backdrop = props => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nimport classes from './SideDrawer.css';\n\nconst sideDrawer = props => {\n    let attachedClass = [classes.SideDrawer, classes.Close];\n\n    if (props.open) attachedClass =  [classes.SideDrawer, classes.Open];\n\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n\n            <div className={attachedClass.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\n\nimport classes from './Layout.css';\n\nimport Aux from '../Aux/Aux';\nimport withClass from '../WithClass/withClass';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({ showSideDrawer: false });\n    }\n\n    // negates previous 'showSideDrawer' from the state\n    sideDrawerToggleHandler = () => {\n        this.setState( prevState => { return {showSideDrawer: !prevState.showSideDrawer} });\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Toolbar toggle={this.sideDrawerToggleHandler} />\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler} />\n                <header><p>SideDrawer</p></header>\n                <main className={classes.content}>{this.props.children}</main>\n                <footer>Burger Builder © 2019 by Lypzis.</footer>\n            </Aux>\n        );\n    }\n}\n\nexport default withClass(Layout, classes.Layout);","import React, { Component } from 'react';\n\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nimport classes from './Modal.css';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    /*\n    componentWillUpdate() {\n        console.log('[Modal.js] will update')\n    } */\n\n    render() {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClose} />\n                <div className={[classes.Modal, this.props.show ? classes.show : classes.doNotShow].join(' ')}>\n                    {this.props.children}\n                </div>\n            </Aux >\n        );\n    }\n};\n\nexport default Modal;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\n// Global error handler, which can wrapps any component using axios\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n\n        // this needs to execute before everything else, that is why a constructor is used here\n        constructor() {\n            super();\n\n            this.state = {\n                error: null\n            }\n\n            // dynamically handles 'error state' if there was error while making a request\n            // setting it to be the error returned, else is set to/remains null\n            // sets error state to null, then returns request\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({ error: null });\n\n                return req;\n            });\n\n            // returns response, else, sets error state to the error ocurred\n            this.resInterceptor = axios.interceptors.response.use(res => res, err => {\n                this.setState({ error: err });\n            });\n        }\n\n        // When this component is not needed, eject interceptors to free memory\n        componentWillUnmount() {\n            console.log('Will it unmount ?')\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.request.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({ error: null });\n        }\n\n        render() {\n            return ( // render error modal, in case there is an error\n                <Aux>\n                    <Modal\n                        show={this.state.error}\n                        modalClose={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://burguerbuilderapi.firebaseio.com/'\n});\n\nexport default instance;","import * as actionTypes from './actionsTypes';\nimport axios from '../../axios';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    console.log(orderData);\n\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    }\n}\n\nexport const purchaseBurgerFail = error => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\nexport const purchaseBurger = (orderData) => {\n    return async dispatch => {\n\n        // loading\n        dispatch(purchaseBurgerStart());\n\n        try {\n            const response = await axios.post('/orders.json', orderData) // firebase syntax requires '.json', you can simulate an error by removing it :D\n\n            console.log(response.data);\n\n            // yes, the id is coming from 'name' property\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n        } catch (err) {\n            dispatch(purchaseBurgerFail(err));\n        }\n\n    }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const fetchOrderSuccess = orders => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n}\n\nexport const fetchOrdersFail = error => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    }\n}\n\nexport const fetchOrders = () => {\n    return async dispatch => {\n        dispatch(fetchOrdersStart());\n\n        try {\n            const response = await axios.get('/orders.json');\n            //console.log(response.data);\n            // to turn multiple objects into one array\n            const fetchedOrders = []; // this will hold order objects\n            for (let key in response.data) {\n                fetchedOrders.push(\n                    {\n                        ...response.data[key], // this will distribute all attributes to the object being pushed\n                        id: key     // and this will make sure that we won't lose its key\n                    }\n                );\n            }\n\n            dispatch(fetchOrderSuccess(fetchedOrders));\n        } catch (err) {\n            dispatch(fetchOrdersFail(err));\n        }\n    }\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.css';\n\nclass BurgerIngredient extends Component { // Pure component???\n\n    render() {\n        let ingredient = null;\n\n        switch ( this.props.type ) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n            case ('salad'):\n                ingredient = <div className={classes.Salad}></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className={classes.Bacon}></div>;\n                break;\n            default: ingredient = null;\n        }\n\n        return ingredient;\n    }\n};\n\n// ensures that the property type must be a string and is required.\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport classes from './Burger.css';\n\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = props => {\n    let transformedIngredients = Object.keys(props.ingredients).map(ingKey => {\n        // returns an array of the respective ingredient value.\n        // the \"Array()\" method will create something like [cheese, cheese], \n        // which is the given number value for that ingredient\n        return [...Array(props.ingredients[ingKey])].map((_, index) =>  // then, maps them/it into components \n            <BurgerIngredient key={ingKey + index} type={ingKey} />\n        );// \"Object.keys\" turns an object's keys into an array\n    }).reduce((arr, el) => { // reduce gets each element of the array, parameters are the accumulator and current element \n        return arr.concat(el);\n    }, []); // initial value\n\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please, add some ingredients! :D</p>\n    };\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type='bread-top' />\n            {transformedIngredients}\n            <BurgerIngredient type='bread-bottom' />\n        </div>\n    );\n}\n\nexport default withRouter(burger); ","import React from 'react';\n\nimport Aux from '../../../../hoc/Aux/Aux';\nimport withClass from '../../../../hoc/WithClass/withClass';\n\nimport classes from './BuildControl.css';\n\nconst buildControl = props => ( // disabled accepts true or false, property from React\n    <Aux>\n        <div className={classes.Label}>{props.label}</div>\n        <button\n            className={classes.Less}\n            onClick={props.remove}\n            disabled={props.disabled}>Less</button>\n        <button\n            className={classes.More}\n            onClick={props.add}>More</button>\n    </Aux>\n);\n\nexport default withClass(buildControl, classes.BuildControl);","import React from 'react';\n\nimport Aux from '../../../hoc/Aux/Aux';\nimport withClass from '../../../hoc/WithClass/withClass';\nimport BuildControl from './BuildControl/BuildControl';\n\nimport classes from './BuildControls.css';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n    // ...\n];\n\nconst buildControls = props => ( // to fixed will fix the price value to have only two number after the dot.\n    <Aux>\n        <p>Current Price: <strong>${props.price.toFixed(2)}</strong></p>\n        {\n            controls.map(control => <BuildControl\n                key={control.label}\n                label={control.label}\n                add={props.addIngredient.bind(this, control.type)}\n                remove={props.removeIngredient.bind(this, control.type)}\n                disabled={props.disabled[control.type]} />\n            )\n        }\n        <button\n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}>ORDER NOW</button>\n    </Aux>\n);\n\nexport default withClass(buildControls, classes.BuildControls);","import React from 'react';\n\nimport classes from './Button.css';\n\nconst button = props => (\n    <button\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        disabled={props.disabled}\n        onClick={props.clicked}>\n        {props.children}\n    </button>\n);\n\nexport default button;","import React, { Component } from 'react';\n\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nimport classes from './OrderSummary.css';\n\nclass OrderSummary extends Component {\n\n    // This could be a functional component\n    /*\n    componentWillUpdate() {\n        console.log('[OrderSummary.js] will update');\n    } */\n\n    render() {\n        const ingredientSummary = Object.keys(this.props.ingredients)\n            .map(ingredientKey =>\n                <li key={ingredientKey}>\n                    <span className={classes.span}>{ingredientKey}</span>: {this.props.ingredients[ingredientKey]}\n                </li>);\n\n        return (\n            <Aux>\n                <h3 className={classes.OrderSummary__header}>Your Order</h3>\n\n                <div className={classes.OrderSummary__body}>\n                    <p>A delicious burger with the following ingredients: </p>\n\n                    <ul>\n                        {ingredientSummary}\n                    </ul>\n                    <p><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\n                    <p>Continue to checkout?</p>\n                </div>\n\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancel}>Cancel</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinue}>Continue</Button>\n            </Aux>\n        );\n    }\n};\n\nexport default OrderSummary;","import React from 'react';\n\nimport classes from './Spinner.css';\n\nconst spinner = () => <div className={classes.Spinner}></div>;\n\nexport default spinner;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\n\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nimport classes from './BurgerBuilder.css';\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        ingredients: null,\n        totalPrice: 4,\n\n        // local UI state, it is not necessary to be managed by redux\n        purchasing: false\n    };\n\n\n    componentDidMount() {\n        this.props.onInitIngredients(); // executes initialization on componentdidmount\n    }\n\n    /**\n     * Updates the 'purchasable' attribute of the state to true if total value of ingredients\n     * is greater than 0, else remains or is returned to false;\n     */\n    updatePurchaseState = ingredients => {\n        const total = Object.keys(ingredients)\n            .map(ingredientKey => ingredients[ingredientKey]) //maps keys, returning the specific ingredient values from const 'ingredients'\n            .reduce((total, ingreditentValue) => total + ingreditentValue, 0);  // then sums it to a total. initial value is 0\n\n        return total > 0; // true if at least 1 ingredient is added to the burger\n    }\n\n    /**\n     * Sets 'purchasing' to true\n     */\n    purchaseHandler = () => {\n        this.setState({ purchasing: true });\n    }\n\n    /**\n     * Sets 'purchasing' to true\n     */\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false });\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n\n        this.props.history.push('/checkout');\n    }\n\n    render() {\n        const disabledInfo = { ...this.props.ings };\n\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0; // replaces values with true or false if it attends the condition\n        }\n\n        let orderSummary = null;\n\n        // this is hadled with props, outside the state now\n        let burger = this.props.error ? <p>Sorry, something is preventing the page from loading... :(</p> : <Spinner />\n\n        if (this.props.ings) {\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseContinue={this.purchaseContinueHandler}\n                purchaseCancel={this.purchaseCancelHandler} />;\n\n            burger = <Aux>\n                <div className={classes.BurgerBuilder}>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        disabled={disabledInfo}\n                        price={this.props.price}\n                        purchasable={this.updatePurchaseState(this.props.ings)} // in this case, I want it to automatically execute at render\n                        ordered={this.purchaseHandler}\n                        addIngredient={this.props.onAddIngredient}\n                        removeIngredient={this.props.onRemoveIngredient} />\n                </div>\n            </Aux>;\n        }\n\n        // DEPRECATED\n        //if (this.state.loading) orderSummary = <Spinner />;\n        return ( // The Modal and its related content will only if purchasing is true\n            <Aux>\n                <Modal show={this.state.purchasing} modalClose={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddIngredient: ingredientName => dispatch(actions.addIngredient(ingredientName)),\n        onRemoveIngredient: ingredientName => dispatch(actions.removeIngredient(ingredientName)),\n\n        // init ingredients from server\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n\n        // \n        onInitPurchase: () => dispatch(actions.purchaseInit())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionsTypes';\nimport axios from '../../axios';\n\nexport const addIngredient = name => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    }\n}\n\nexport const removeIngredient = name => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    }\n}\n\n// this will be only used internally, even it has 'export'\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    }\n}\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n}\n\n// Fetching ingredients asynchronously\nexport const initIngredients = () => {\n    return async dispatch => {\n        try {\n            const response = await axios.get('/ingredients.json');\n\n            // dispatches response received from server\n            dispatch(setIngredients(response.data));\n        } catch (err) {\n            //console.log(err);\n            dispatch(fetchIngredientsFailed());\n        }\n    }\n}","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\n\nimport classes from './CheckoutSummary.css';\n\nconst checkoutSummary = props => {\n\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes good!</h1>\n\n            <div style={{ width: '100%', margin: 'auto' }}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n\n            <Button btnType=\"Danger\" clicked={props.cancelOrder}>Cancel</Button>\n            <Button btnType=\"Success\" clicked={props.continueOrder}>Continue</Button>\n        </div>\n    );\n};\n\nexport default checkoutSummary;","import React from 'react';\n\nimport classes from './Input.css';\n\nconst input = props => {\n    let inputElement = null;\n    let validationError = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched)\n        inputClasses.push(classes.Invalid);\n\n    if (props.invalid && props.touched)\n        validationError = <p className={classes.ValidationError}>Please enter a valid value!</p>\n\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                defaultValue={props.value} onChange={props.changed} />\n            break;\n        case ('textarea'):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                defaultValue={props.value} onChange={props.changed} />\n            break;\n        case ('select'):\n            const selectOptions = props.elementConfig.options.map(option => {\n                return <option key={option.value} value={option.value}>{option.displayValue}</option>\n            });\n\n            inputElement = <select className={inputClasses.join(' ')} onChange={props.changed}>\n                {selectOptions}\n            </select>\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                defaultValue={props.value} onChange={props.changed} />\n    }\n\n    return (\n        <div className={inputClasses.join(' ')}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n            {validationError}\n        </div>\n    );\n}\n\nexport default input;","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nimport axios from '../../../axios';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\nimport * as actions from '../../../store/actions/index';\n\nimport classes from './ContactData.css';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Street'\n                },\n                value: '',\n\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Zip Code'\n                },\n                value: '',\n\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Country'\n                },\n                value: '',\n\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your Email'\n                },\n                value: '',\n\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: 'none', displayValue: '-- Select --' },\n                        { value: 'fastest', displayValue: 'Fastest' },\n                        { value: 'cheapest', displayValue: 'Cheapest' },\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: false\n            },\n\n        },\n        formIsValid: false,\n        loading: false\n    }\n\n    orderHandler = event => {\n        event.preventDefault();\n\n        const formData = {};\n\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price, // this should be checked in backend to see if it is not being manipulated\n            orderData: formData\n        };\n\n        console.log(order);\n\n        // executes action\n        this.props.onOrderBurger(order);\n    }\n\n    checkValidity = (value, rules) => {\n        let isValid = true; // starts as valid\n\n        // depends on which rules we have\n        if (rules.required)\n            isValid = value.trim() !== '' && isValid; // basically checking if field value is empty or filled with white spaces\n\n        // another example\n        if (rules.minLength)\n            isValid = value.length >= rules.minLength && isValid;\n\n        if (rules.maxLength)\n            isValid = value.length <= rules.maxLength && isValid;\n\n        // passing 'isValid' to all the verifications will make sure that if\n        // it gets reproved in one of them, it won't pass in any other.\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        // Here order form is cloned superficially\n        const updatedOrderForm = { ...this.state.orderForm };\n        // And down here its objects are deeply cloned, for safely changing 'value'\n        const updatedFormElement = { ...updatedOrderForm[inputIdentifier] };\n\n        updatedFormElement.value = event.target.value; // so the value is updated here\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n\n        updatedFormElement.touched = true;\n\n        updatedOrderForm[inputIdentifier] = updatedFormElement; // and then updated to the cloned form\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid; // :D, remember if one is false, everything is!\n        }\n\n        console.log(formIsValid);\n\n        this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\n    }\n\n    renderInputs = () => {\n        const accumulator = [];\n\n        for (let input in this.state.orderForm) {\n            accumulator.push(\n                <Input\n                    key={input}\n                    elementType={this.state.orderForm[input].elementType}\n                    elementConfig={this.state.orderForm[input].elementConfig}\n                    value={this.state.orderForm[input].value}\n                    invalid={!this.state.orderForm[input].valid}\n                    shouldValidate={this.state.orderForm[input].validation}\n                    touched={this.state.orderForm[input].touched}\n                    changed={event => this.inputChangedHandler(event, input)}\n                    required />\n            );\n        }\n\n        return accumulator;\n    }\n\n    render() {\n        const inputs = this.renderInputs();\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {inputs}\n                {/* button to submit form is disable if form is not valid */}\n                <Button btnType=\"success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n\n        if (this.props.loading)\n            form = <Spinner />;\n\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.orders.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n//import * as actions from '../../store/actions/index';\n\nclass Checkout extends Component {\n\n    cancelCheckoutHandler = () => {\n        this.props.history.goBack(); //goes back to the last page, duh :D\n    }\n\n    continueCheckoutHandler = () => {\n        this.props.history.replace('/checkout/contact-data'); //replaces current url\n    }\n\n    render() {\n        let summary = <Redirect to=\"/\" />\n\n        if (this.props.ings) {\n            // if purchase succeds, redirects to home\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\n\n            summary = (\n                <Aux>\n                    {purchasedRedirect}\n                    <CheckoutSummary\n                        ingredients={this.props.ings} //this.props.location.ingredients\n                        cancelOrder={this.cancelCheckoutHandler}\n                        continueOrder={this.continueCheckoutHandler} />\n                    <Route\n                        path={this.props.match.path + '/contact-data'}\n                        component={ContactData}\n\n                    /*Still renders the component with \n                the advantage of being able to pass props to it :D\n                    render={props => (\n                        <ContactData\n                            ingredients={this.state.ingredients}\n                            price={this.state.totalPrice}\n                            {...props} />  distribute properties from this component to 'ContactData'\n                    )} */\n                    />\n                </Aux>\n            );\n        }\n        return summary; // Yep, that's the end result of the return\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.orders.purchased\n    }\n}\n\nexport default connect(mapStateToProps)(Checkout); // \"dispatched to props\" ommited since there is nothing to dispatch here. Can just pass 'null' as well","import React from 'react';\n\nimport classes from './Order.css';\n\nconst order = props => {\n    const ingredients = [];\n\n    // alternative to Object.Keys... inside Burger.js\n    for (let ingredientName in props.ingredients) {\n        ingredients.push(\n            {\n                name: ingredientName, // the attribute name\n                amount: props.ingredients[ingredientName], // the value of the attribute\n            }\n        )\n    }\n\n    const ingredientsOutput = ingredients.map(ingredient => {\n        return <span\n            style={{\n                display: 'block',\n                textTransform: 'capitalize',\n                border: '1px solid #ccc',\n                margin: '.8rem 0',\n                padding: '.5rem'\n            }}\n            key={ingredient.name}>{ingredient.name} ({ingredient.amount})&emsp;</span>\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientsOutput}</p>\n            <p>Price: <strong>USD {parseFloat(props.price).toFixed(2)}</strong></p>\n\n        </div>\n    )\n};\n\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport axios from '../../axios';\nimport Order from '../../components/Order/Order';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.onFetchOrders();\n    }\n\n    render() {\n        let orders = <Spinner />\n\n        if (!this.props.loading)\n            orders = (\n                this.props.orders.map(order => {\n                    console.log(order.price);\n\n                    return <Order\n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price} />\n                })\n            );\n\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.orders.orders,\n        loading: state.orders.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: () => dispatch(actions.fetchOrders())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport classes from './App.css';\n\nimport Layout from '../hoc/Layout/Layout';\nimport BurgerBuilder from './BurgerBuilder/BurgerBuilder';\nimport Checkout from './Checkout/Checkout';\nimport Orders from './Orders/Orders';\n\nconst App = props => {\n  return (\n    <div className={classes.App} >\n      <Layout>\n        <Switch>\n          <Route path=\"/burger-builder\" component={BurgerBuilder} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/checkout\" component={Checkout} />\n          <Redirect from=\"/\" to=\"/burger-builder\" />\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","/**\n * Receives two objects and turn into a one with updated properties.\n * @param {*} oldObject object\n * @param {*} updatedProperties custom object with properties inside. eg: { potato: 1 }\n */\nexport const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject, // deep clone, because of 'spread'\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false // to true if loading fails\n}\n\n//Global constants are named entirely in capital letters\nconst INGREDIENT_PRICES = {\n    salad: .5,\n    cheese: .6,\n    meat: 1.4,\n    bacon: .8\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            // key: increment value of respective key, which is the ingrediente I want to add\n            const updatedIngredient = { [action.ingredientName]: ++state.ingredients[action.ingredientName] };\n\n            // updatedIngredient is set into 'state.ingredients' where it respectively replaces the old value\n            const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n\n            // then the new ingredients and total price are passed into and object\n            const updatedState = {\n                ingredients: updatedIngredients,\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            }\n\n            // which returns the utility function again, passing where the old state values\n            // are joined with the updated values, respectively: ingredients and totalPrice.\n            return updateObject(state, updatedState);\n        case actionTypes.REMOVE_INGREDIENT:\n            const updatedIngredient2 = { [action.ingredientName]: --state.ingredients[action.ingredientName] };\n            const updatedIngredients2 = updateObject(state.ingredients, updatedIngredient2);\n            const updatedState2 = {\n                ingredients: updatedIngredients2,\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            }\n\n            return updateObject(state, updatedState2); // '2' because you can't reassign a const, this obviously not ideal\n        case actionTypes.SET_INGREDIENTS: // ingredients initialized\n            return updateObject(\n                state,\n                {\n                    ingredients: { // turned into an object for manualy setting the position of ingredients.\n                        salad: action.ingredients.salad,\n                        bacon: action.ingredients.bacon,\n                        cheese: action.ingredients.cheese,\n                        meat: action.ingredients.meat // flexibility is lost this way... D: \n                    },\n                    totalPrice: 4, // this will reset the price, when back to BurgerBuilder container\n                    error: false\n                });\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return updateObject(state, { error: true });\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT:\n            return updateObject(state, { purchased: false }); // resets when going to checkout \n        case actionTypes.PURCHASE_BURGER_START:\n            return updateObject(state, { loading: true }); // loading complete\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            const newOrder = updateObject(action.orderData, { id: action.orderId });\n            return updateObject(state, {\n                loading: false,\n                orders: state.orders.concat(newOrder), // remember with concat the array is added immutably, creating a new one :D\n                purchased: true\n            });\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return updateObject(state, { loading: false });\n        case actionTypes.FETCH_ORDERS_START:\n            return updateObject(state, { loading: true });\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return updateObject(state, {\n                orders: action.orders, // as is set in fetchedOrderSuccess in actions/order.js\n                loading: false // it is not loading anylonger at this point\n            });\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return updateObject(state, { loading: false });\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'; //the middleare in question is 'redux-thunk\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './containers/App';\n\n//redux reducers \nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\n\nimport * as serviceWorker from './serviceWorker';\n\n// thunk middleware\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducers = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    orders: orderReducer\n});\n\n// advanced store setup with redux devtools extension\nconst store = createStore(\n    rootReducers,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}