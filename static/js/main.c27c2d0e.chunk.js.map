{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Navigation/Toolbar/Toolbar.css","components/UI/Modal/Modal.css","components/Burger/OrderSummary/OrderSummary.css","hoc/Layout/Layout.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","containers/App.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Spinner/Spinner.css","containers/BurgerBuilder/BurgerBuilder.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","hoc/Aux/Aux.js","hoc/WithClass/withClass.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","axios.js","components/UI/Modal/Modal.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/App.js","store/reducer.js","serviceWorker.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","SideDrawer","Open","Close","Logo","BuildControl","Label","Less","More","Input","InputElement","Invalid","ValidationError","Toolbar","DesktopOnly","Modal","show","doNotShow","OrderSummary__header","OrderSummary__body","Layout","content","BuildControls","OrderButton","Button","Success","Danger","App","__webpack_require__","p","NavigationItem","active","NavigationItems","DrawerToggle","Backdrop","Burger","Spinner","sk-rotateplane","BurgerBuilder","CheckoutSummary","ContactData","Order","aux","props","children","withClass","WrappedComponent","className","react_default","a","createElement","logo","classes","style","height","src","burgerLogo","alt","navigationItem","react_router_dom","to","link","exact","navigationItems","NavigationItem_NavigationItem","drawerToggle","onClick","clicked","toolbar","DrawerToggle_DrawerToggle","toggle","Logo_Logo","NavigationItems_NavigationItems","backdrop","sideDrawer","attachedClass","open","Aux","Backdrop_Backdrop","closed","join","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Component","instance","axios","create","baseURL","nextProps","nextState","modalClose","withErrorHandler","_Component","_temp","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errorConfirmedHandler","error","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","inherits","createClass","key","value","console","log","eject","UI_Modal_Modal","message","BurgerIngredient","ingredient","type","withRouter","transformedIngredients","keys","ingredients","map","ingKey","toConsumableArray","Array","_","index","Burger_BurgerIngredient_BurgerIngredient","reduce","arr","el","concat","length","label","remove","disabled","add","controls","price","toFixed","control","BuildControl_BuildControl","addIngredient","bind","removeIngredient","purchasable","ordered","button","btnType","OrderSummary","ingredientSummary","ingredientKey","span","Button_Button","purchaseCancel","purchaseContinue","spinner","totalPrice","purchasing","loading","updatePurchaseState","total","ingreditentValue","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","disabledInfo","objectSpread","ings","orderSummary","burger","Spinner_Spinner","Burger_OrderSummary_OrderSummary","Burger_Burger","BuildControls_BuildControls","onAddIngredient","onRemoveIngredient","connect","dispatch","ingredientName","payload","checkoutSummary","width","margin","cancelOrder","continueOrder","input","inputElement","validationError","inputClasses","invalid","shouldValidate","touched","elementType","assign","elementConfig","defaultValue","onChange","changed","selectOptions","options","option","displayValue","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","then","replace","catch","checkValidity","rules","isValid","trim","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","renderInputs","accumulator","_loop","Input_Input","inputs","form","onSubmit","Checkout","cancelCheckoutHandler","goBack","continueCheckoutHandler","CheckoutSummary_CheckoutSummary","react_router","path","match","component","amount","ingredientsOutput","display","textTransform","border","padding","parseFloat","orders","_this2","get","fetchedOrders","data","id","Order_Order","hoc_Layout_Layout","Orders","from","initialState","salad","bacon","cheese","meat","INGREDIENT_PRICES","reducer","arguments","undefined","action","defineProperty","Boolean","window","location","hostname","store","createStore","app","es","src_containers_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uFACAA,EAAAC,QAAA,CAAkBC,YAAA,uCAAAC,SAAA,oCAAAC,OAAA,kCAAAC,OAAA,kCAAAC,KAAA,gCAAAC,OAAA,kCAAAC,MAAA,iCAAAC,MAAA,uDCAlBT,EAAAC,QAAA,CAAkBS,WAAA,gCAAAC,KAAA,0BAAAC,MAAA,2BAAAC,KAAA,8CCAlBb,EAAAC,QAAA,CAAkBa,aAAA,oCAAAC,MAAA,6BAAAC,KAAA,4BAAAC,KAAA,8CCAlBjB,EAAAC,QAAA,CAAkBiB,MAAA,sBAAAH,MAAA,sBAAAI,aAAA,6BAAAC,QAAA,wBAAAC,gBAAA,oDCAlBrB,EAAAC,QAAA,CAAkBqB,QAAA,0BAAAT,KAAA,uBAAAU,YAAA,gDCAlBvB,EAAAC,QAAA,CAAkBuB,MAAA,sBAAAC,KAAA,qBAAAC,UAAA,4CCAlB1B,EAAAC,QAAA,CAAkB0B,qBAAA,4CAAAC,mBAAA,+DCAlB5B,EAAAC,QAAA,CAAkB4B,OAAA,wBAAAC,QAAA,8CCAlB9B,EAAAC,QAAA,CAAkB8B,cAAA,sCAAAC,YAAA,sDCAlBhC,EAAAC,QAAA,CAAkBgC,OAAA,wBAAAC,QAAA,yBAAAC,OAAA,sDCAlBnC,EAAAC,QAAA,CAAkBmC,IAAA,oCCDlBpC,EAAAC,QAAiBoC,EAAAC,EAAuB,yDCCxCtC,EAAAC,QAAA,CAAkBY,KAAA,sCCAlBb,EAAAC,QAAA,CAAkBsC,eAAA,wCAAAC,OAAA,mDCAlBxC,EAAAC,QAAA,CAAkBwC,gBAAA,4DCAlBzC,EAAAC,QAAA,CAAkByC,aAAA,sDCAlB1C,EAAAC,QAAA,CAAkB0C,SAAA,gDCAlB3C,EAAAC,QAAA,CAAkB2C,OAAA,0CCAlB5C,EAAAC,QAAA,CAAkB4C,QAAA,0BAAAC,iBAAA,mDCAlB9C,EAAAC,QAAA,CAAkB8C,cAAA,wDCAlB/C,EAAAC,QAAA,CAAkB+C,gBAAA,4DCAlBhD,EAAAC,QAAA,CAAkBgD,YAAA,oDCAlBjD,EAAAC,QAAA,CAAkBiD,MAAA,8RCEHC,EAFH,SAAAC,GAAK,OAAIA,EAAMC,UCWZC,EARG,SAACC,EAAkBC,GACjC,OAAO,SAAAJ,GAAK,OACRK,EAAAC,EAAAC,cAAA,OAAKH,UAAWA,GACZC,EAAAC,EAAAC,cAACJ,EAAqBH,wCCKnBQ,EANF,SAAAR,GAAK,OACdK,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAQhD,KAAMiD,MAAO,CAACC,OAAQX,EAAMW,SAChDN,EAAAC,EAAAC,cAAA,OAAKK,IAAKC,IAAYC,IAAI,mCCKnBC,EARQ,SAAAf,GAAK,OACxBK,EAAAC,EAAAC,cAAA,MAAIH,UAAWK,IAAQtB,gBACnBkB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAASC,GAAIjB,EAAMkB,KAAMC,MAAOnB,EAAMmB,OAAtC,IACKnB,EAAMC,6BCKJmB,EAPS,SAAApB,GAAK,OACzBK,EAAAC,EAAAC,cAAA,MAAIH,UAAWK,IAAQpB,iBACnBgB,EAAAC,EAAAC,cAACc,EAAD,CAAgBH,KAAK,mBAArB,kBACAb,EAAAC,EAAAC,cAACc,EAAD,CAAgBH,KAAK,UAAUC,OAAK,GAApC,6BCKOG,EAVM,SAAAtB,GAAK,OACtBK,EAAAC,EAAAC,cAAA,OACIH,UAAWK,IAAQnB,aACnBiC,QAASvB,EAAMwB,SACfnB,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,+BCWOkB,EAbC,SAAAzB,GAAK,OACjBK,EAAAC,EAAAC,cAAA,UAAQH,UAAWK,IAAQvC,SACvBmC,EAAAC,EAAAC,cAACmB,EAAD,CAAcF,QAASxB,EAAM2B,QAA7B,QACAtB,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAQhD,MACpB4C,EAAAC,EAAAC,cAACqB,EAAD,OAGJvB,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAQtC,aACpBkC,EAAAC,EAAAC,cAACsB,EAAD,0BCRGC,EAJE,SAAA9B,GAAK,OAClBA,EAAM3B,KAAOgC,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAQlB,SAAUgC,QAASvB,EAAMwB,UAAkB,uBC0BrEO,EAtBI,SAAA/B,GACf,IAAIgC,EAAgB,CAACvB,IAAQnD,WAAYmD,IAAQjD,OAIjD,OAFIwC,EAAMiC,OAAMD,EAAiB,CAACvB,IAAQnD,WAAYmD,IAAQlD,OAG1D8C,EAAAC,EAAAC,cAAC2B,EAAD,KACI7B,EAAAC,EAAAC,cAAC4B,EAAD,CAAU9D,KAAM2B,EAAMiC,KAAMT,QAASxB,EAAMoC,SAE3C/B,EAAAC,EAAAC,cAAA,OAAKH,UAAW4B,EAAcK,KAAK,MAC/BhC,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAQhD,MACpB4C,EAAAC,EAAAC,cAACqB,EAAD,OAGJvB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsB,EAAD,UCYL3B,+MA1BXoC,MAAQ,CACJC,gBAAgB,KAGpBC,wBAA0B,WACtBC,EAAKC,SAAS,CAAEH,gBAAgB,OAIpCI,wBAA0B,WACtBF,EAAKC,SAAU,SAAAE,GAAe,MAAO,CAACL,gBAAiBK,EAAUL,2FAIjE,OACIlC,EAAAC,EAAAC,cAAC2B,EAAD,KACI7B,EAAAC,EAAAC,cAACsC,EAAD,CAASlB,OAAQmB,KAAKH,0BACtBtC,EAAAC,EAAAC,cAACwC,EAAD,CAAYd,KAAMa,KAAKR,MAAMC,eAAgBH,OAAQU,KAAKN,0BAC1DnC,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,wBACRF,EAAAC,EAAAC,cAAA,QAAMH,UAAWK,IAAQ/B,SAAUoE,KAAK9C,MAAMC,UAC9CI,EAAAC,EAAAC,cAAA,6DArBKyC,aA2BYvC,IAAQhC,iDC9B1BwE,SAJEC,EAAMC,OAAO,CAC1BC,QAAS,+DC2BEhF,iMArBWiF,EAAWC,GAC7B,OAAOD,EAAUhF,OAASyE,KAAK9C,MAAM3B,MAAQgF,EAAUpD,WAAa6C,KAAK9C,MAAMC,0CAS/E,OACII,EAAAC,EAAAC,cAAC2B,EAAD,KACI7B,EAAAC,EAAAC,cAAC4B,EAAD,CAAU9D,KAAMyE,KAAK9C,MAAM3B,KAAMmD,QAASsB,KAAK9C,MAAMuD,aACrDlD,EAAAC,EAAAC,cAAA,OAAKH,UAAW,CAACK,IAAQrC,MAAO0E,KAAK9C,MAAM3B,KAAOoC,IAAQpC,KAAOoC,IAAQnC,WAAW+D,KAAK,MACpFS,KAAK9C,MAAMC,kBAhBZ+C,aCmDLQ,GApDU,SAACrD,EAAkB+C,GACxC,gBAAAO,GAGI,SAAAC,IAAc,IAAAjB,EAAA,OAAAkB,OAAAC,EAAA,EAAAD,CAAAb,KAAAY,IACVjB,EAAAkB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAjB,QA4BJkB,sBAAwB,WACpBvB,EAAKC,SAAS,CAAEuB,MAAO,QA3BvBxB,EAAKH,MAAQ,CACT2B,MAAO,MAMXxB,EAAKyB,eAAiBhB,EAAMiB,aAAaC,QAAQC,IAAI,SAAAC,GAGjD,OAFA7B,EAAKC,SAAS,CAAEuB,MAAO,OAEhBK,IAIX7B,EAAK8B,eAAiBrB,EAAMiB,aAAaK,SAASH,IAAI,SAAAI,GAAG,OAAIA,GAAK,SAAAC,GAC9DjC,EAAKC,SAAS,CAAEuB,MAAOS,MAlBjBjC,EAHlB,OAAAkB,OAAAgB,EAAA,EAAAhB,CAAAD,EAAAD,GAAAE,OAAAiB,EAAA,EAAAjB,CAAAD,EAAA,EAAAmB,IAAA,uBAAAC,MAAA,WA2BQC,QAAQC,IAAI,qBACZ9B,EAAMiB,aAAaC,QAAQa,MAAMnC,KAAKoB,gBACtChB,EAAMiB,aAAaC,QAAQa,MAAMnC,KAAKyB,kBA7B9C,CAAAM,IAAA,SAAAC,MAAA,WAqCQ,OACIzE,EAAAC,EAAAC,cAAC2B,EAAD,KACI7B,EAAAC,EAAAC,cAAC2E,GAAD,CACI7G,KAAMyE,KAAKR,MAAM2B,MACjBV,WAAYT,KAAKkB,uBAChBlB,KAAKR,MAAM2B,MAAQnB,KAAKR,MAAM2B,MAAMkB,QAAU,MAEnD9E,EAAAC,EAAAC,cAACJ,EAAqB2C,KAAK9C,YA5C3C0D,EAAA,CAAqBV,+DCuCVoC,oLAtCP,IAAIC,EAAa,KAEjB,OAASvC,KAAK9C,MAAMsF,MAChB,IAAM,eACFD,EAAahF,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQ3D,cACrC,MACJ,IAAM,YACFuI,EACIhF,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQ1D,UACpBsD,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQzD,SACxBqD,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQxD,UAGhC,MACJ,IAAM,OACFoI,EAAahF,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQvD,OACrC,MACJ,IAAM,SACFmI,EAAahF,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQtD,SACrC,MACJ,IAAM,QACFkI,EAAahF,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQrD,QACrC,MACJ,IAAM,QACFiI,EAAahF,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQpD,QACrC,MACJ,QAASgI,EAAa,KAG1B,OAAOA,SAhCgBrC,aC2BhBuC,eAzBA,SAAAvF,GACX,IAAIwF,EAAyB7B,OAAO8B,KAAKzF,EAAM0F,aAAaC,IAAI,SAAAC,GAI5D,OAAOjC,OAAAkC,GAAA,EAAAlC,CAAImC,MAAM9F,EAAM0F,YAAYE,KAAUD,IAAI,SAACI,EAAGC,GAAJ,OAC7C3F,EAAAC,EAAAC,cAAC0F,GAAD,CAAkBpB,IAAKe,EAASI,EAAOV,KAAMM,QAElDM,OAAO,SAACC,EAAKC,GACZ,OAAOD,EAAIE,OAAOD,IACnB,IAMH,OAJsC,IAAlCZ,EAAuBc,SACvBd,EAAyBnF,EAAAC,EAAAC,cAAA,8CAIzBF,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQjB,QACpBa,EAAAC,EAAAC,cAAC0F,GAAD,CAAkBX,KAAK,cACtBE,EACDnF,EAAAC,EAAAC,cAAC0F,GAAD,CAAkBX,KAAK,wCCPpBpF,KAbM,SAAAF,GAAK,OACtBK,EAAAC,EAAAC,cAAC2B,EAAD,KACI7B,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQ9C,OAAQqC,EAAMuG,OACtClG,EAAAC,EAAAC,cAAA,UACIH,UAAWK,KAAQ7C,KACnB2D,QAASvB,EAAMwG,OACfC,SAAUzG,EAAMyG,UAHpB,QAIApG,EAAAC,EAAAC,cAAA,UACIH,UAAWK,KAAQ5C,KACnB0D,QAASvB,EAAM0G,KAFnB,UAM+BjG,KAAQ/C,kCCZzCiJ,GAAW,CACb,CAAEJ,MAAO,QAASjB,KAAM,SACxB,CAAEiB,MAAO,QAASjB,KAAM,SACxB,CAAEiB,MAAO,SAAUjB,KAAM,UACzB,CAAEiB,MAAO,OAAQjB,KAAM,SAuBZpF,KAnBO,SAAAF,GAAK,OACvBK,EAAAC,EAAAC,cAAC2B,EAAD,KACI7B,EAAAC,EAAAC,cAAA,2BAAkBF,EAAAC,EAAAC,cAAA,kBAAUP,EAAM4G,MAAMC,QAAQ,KAE5CF,GAAShB,IAAI,SAAAmB,GAAO,OAAIzG,EAAAC,EAAAC,cAACwG,GAAD,CACpBlC,IAAKiC,EAAQP,MACbA,MAAOO,EAAQP,MACfG,IAAK1G,EAAMgH,cAAcC,YAAWH,EAAQxB,MAC5CkB,OAAQxG,EAAMkH,iBAAiBD,YAAWH,EAAQxB,MAClDmB,SAAUzG,EAAMyG,SAASK,EAAQxB,UAGzCjF,EAAAC,EAAAC,cAAA,UACIH,UAAWK,KAAQ7B,YACnB6H,UAAWzG,EAAMmH,YACjB5F,QAASvB,EAAMoH,SAHnB,eAOgC3G,KAAQ9B,mCCtBjC0I,GATA,SAAArH,GAAK,OAChBK,EAAAC,EAAAC,cAAA,UACIH,UAAW,CAACK,KAAQ5B,OAAQ4B,KAAQT,EAAMsH,UAAUjF,KAAK,KACzDoE,SAAUzG,EAAMyG,SAChBlF,QAASvB,EAAMwB,SACdxB,EAAMC,+BCkCAsH,oLA5BF,IAAA9E,EAAAK,KACC0E,EAAoB7D,OAAO8B,KAAK3C,KAAK9C,MAAM0F,aAC5CC,IAAI,SAAA8B,GAAa,OACdpH,EAAAC,EAAAC,cAAA,MAAIsE,IAAK4C,GACLpH,EAAAC,EAAAC,cAAA,QAAMH,UAAWK,KAAQiH,MAAOD,GADpC,KAC4DhF,EAAKzC,MAAM0F,YAAY+B,MAG3F,OACIpH,EAAAC,EAAAC,cAAC2B,EAAD,KACI7B,EAAAC,EAAAC,cAAA,MAAIH,UAAWK,KAAQlC,sBAAvB,cAEA8B,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQjC,oBACpB6B,EAAAC,EAAAC,cAAA,gEAEAF,EAAAC,EAAAC,cAAA,UACKiH,GAELnH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,+BAAuBuC,KAAK9C,MAAM4G,MAAMC,QAAQ,KACnDxG,EAAAC,EAAAC,cAAA,mCAGJF,EAAAC,EAAAC,cAACoH,GAAD,CAAQL,QAAQ,SAAS9F,QAASsB,KAAK9C,MAAM4H,gBAA7C,UACAvH,EAAAC,EAAAC,cAACoH,GAAD,CAAQL,QAAQ,UAAU9F,QAASsB,KAAK9C,MAAM6H,kBAA9C,oBA9BW7E,iCCDZ8E,GAFC,kBAAMzH,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQhB,+BCYxCE,8MAEF2C,MAAQ,CACJoD,YAAa,KACbqC,WAAY,EAGZC,YAAY,EACZC,SAAS,EACThE,OAAO,KA4BXiE,oBAAsB,SAAAxC,GAKlB,OAJc/B,OAAO8B,KAAKC,GACrBC,IAAI,SAAA8B,GAAa,OAAI/B,EAAY+B,KACjCvB,OAAO,SAACiC,EAAOC,GAAR,OAA6BD,EAAQC,GAAkB,GAEpD,KAMnBC,gBAAkB,WACd5F,EAAKC,SAAS,CAAEsF,YAAY,OAMhCM,sBAAwB,WACpB7F,EAAKC,SAAS,CAAEsF,YAAY,OAGhCO,wBAA0B,WACtB9F,EAAKzC,MAAMwI,QAAQC,KAAK,gUAIxB,IAAMC,EAAY/E,OAAAgF,EAAA,EAAAhF,CAAA,GAAQb,KAAK9C,MAAM4I,MAErC,IAAK,IAAI/D,KAAO6D,EACZA,EAAa7D,GAAO6D,EAAa7D,IAAQ,EAG7C,IAAIgE,EAAe,KACfC,EAAShG,KAAKR,MAAM2B,MAAQ5D,EAAAC,EAAAC,cAAA,uEAAoEF,EAAAC,EAAAC,cAACwI,GAAD,MAyBpG,OAvBIjG,KAAK9C,MAAM4I,OACXC,EAAexI,EAAAC,EAAAC,cAACyI,GAAD,CACXtD,YAAa5C,KAAK9C,MAAM4I,KACxBhC,MAAO9D,KAAK9C,MAAM4G,MAClBiB,iBAAkB/E,KAAKyF,wBACvBX,eAAgB9E,KAAKwF,wBAEzBQ,EAASzI,EAAAC,EAAAC,cAAC2B,EAAD,KACL7B,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQd,eACpBU,EAAAC,EAAAC,cAAC0I,GAAD,CAAQvD,YAAa5C,KAAK9C,MAAM4I,OAChCvI,EAAAC,EAAAC,cAAC2I,GAAD,CACIzC,SAAUiC,EACV9B,MAAO9D,KAAK9C,MAAM4G,MAClBO,YAAarE,KAAKoF,oBAAoBpF,KAAK9C,MAAM4I,MACjDxB,QAAStE,KAAKuF,gBACdrB,cAAelE,KAAK9C,MAAMmJ,gBAC1BjC,iBAAkBpE,KAAK9C,MAAMoJ,wBAKzCtG,KAAKR,MAAM2F,UAASY,EAAexI,EAAAC,EAAAC,cAACwI,GAAD,OAGnC1I,EAAAC,EAAAC,cAAC2B,EAAD,KACI7B,EAAAC,EAAAC,cAAC2E,GAAD,CAAO7G,KAAMyE,KAAKR,MAAM0F,WAAYzE,WAAYT,KAAKwF,uBAChDO,GAEJC,UArGW9F,aA+HbqG,eApBS,SAAA/G,GACpB,MAAO,CACHsG,KAAMtG,EAAMoD,YACZkB,MAAOtE,EAAMyF,aAIM,SAAAuB,GACvB,MAAO,CACHH,gBAAiB,SAAAI,GAAc,OAAID,EAAS,CACxChE,KCrIkB,iBDsIlBkE,QAAS,CAACD,eAAgBA,MAE9BH,mBAAoB,SAAAG,GAAc,OAAID,EAAS,CAC3ChE,KCxIqB,oBDyIrBkE,QAAS,CAACD,eAAgBA,QAKvBF,CAA6C7F,GAAiB7D,GAAeuD,wBExH7EuG,GAhBS,SAAAzJ,GAEpB,OACIK,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQb,iBACpBS,EAAAC,EAAAC,cAAA,qCAEAF,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAAEgJ,MAAO,OAAQC,OAAQ,SACjCtJ,EAAAC,EAAAC,cAAC0I,GAAD,CAAQvD,YAAa1F,EAAM0F,eAG/BrF,EAAAC,EAAAC,cAACoH,GAAD,CAAQL,QAAQ,SAAS9F,QAASxB,EAAM4J,aAAxC,UACAvJ,EAAAC,EAAAC,cAACoH,GAAD,CAAQL,QAAQ,UAAU9F,QAASxB,EAAM6J,eAAzC,kCCmCGC,GAjDD,SAAA9J,GACV,IAAI+J,EAAe,KACfC,EAAkB,KAChBC,EAAe,CAACxJ,KAAQ1C,cAQ9B,OANIiC,EAAMkK,SAAWlK,EAAMmK,gBAAkBnK,EAAMoK,SAC/CH,EAAaxB,KAAKhI,KAAQzC,SAE1BgC,EAAMkK,SAAWlK,EAAMoK,UACvBJ,EAAkB3J,EAAAC,EAAAC,cAAA,KAAGH,UAAWK,KAAQxC,iBAAtB,gCAEd+B,EAAMqK,aACV,IAAM,QACFN,EAAe1J,EAAAC,EAAAC,cAAA,QAAAoD,OAAA2G,OAAA,CACXlK,UAAW6J,EAAa5H,KAAK,MACzBrC,EAAMuK,cAFC,CAGXC,aAAcxK,EAAM8E,MAAO2F,SAAUzK,EAAM0K,WAC/C,MACJ,IAAM,WACFX,EAAe1J,EAAAC,EAAAC,cAAA,WAAAoD,OAAA2G,OAAA,CACXlK,UAAW6J,EAAa5H,KAAK,MACzBrC,EAAMuK,cAFC,CAGXC,aAAcxK,EAAM8E,MAAO2F,SAAUzK,EAAM0K,WAC/C,MACJ,IAAM,SACF,IAAMC,EAAgB3K,EAAMuK,cAAcK,QAAQjF,IAAI,SAAAkF,GAClD,OAAOxK,EAAAC,EAAAC,cAAA,UAAQsE,IAAKgG,EAAO/F,MAAOA,MAAO+F,EAAO/F,OAAQ+F,EAAOC,gBAGnEf,EAAe1J,EAAAC,EAAAC,cAAA,UAAQH,UAAW6J,EAAa5H,KAAK,KAAMoI,SAAUzK,EAAM0K,SACrEC,GAEL,MACJ,QACIZ,EAAe1J,EAAAC,EAAAC,cAAA,QAAAoD,OAAA2G,OAAA,CACXlK,UAAW6J,EAAa5H,KAAK,MACzBrC,EAAMuK,cAFC,CAGXC,aAAcxK,EAAM8E,MAAO2F,SAAUzK,EAAM0K,WAGvD,OACIrK,EAAAC,EAAAC,cAAA,OAAKH,UAAW6J,EAAa5H,KAAK,MAC9BhC,EAAAC,EAAAC,cAAA,SAAOH,UAAWK,KAAQ9C,OAAQqC,EAAMuG,OACvCwD,EACAC,wBCtCPnK,8MACFyC,MAAQ,CACJyI,UAAW,CACPC,KAAM,CACFX,YAAa,QACbE,cAAe,CACXjF,KAAM,OACN2F,YAAa,aAEjBnG,MAAO,GAEPoG,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPhB,SAAS,GAEbiB,OAAQ,CACJhB,YAAa,QACbE,cAAe,CACXjF,KAAM,OACN2F,YAAa,eAEjBnG,MAAO,GAEPoG,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPhB,SAAS,GAEbkB,QAAS,CACLjB,YAAa,QACbE,cAAe,CACXjF,KAAM,OACN2F,YAAa,iBAEjBnG,MAAO,GAEPoG,WAAY,CACRC,UAAU,EACVI,UAAW,EACXC,UAAW,GAEfJ,OAAO,EACPhB,SAAS,GAEbqB,QAAS,CACLpB,YAAa,QACbE,cAAe,CACXjF,KAAM,OACN2F,YAAa,gBAEjBnG,MAAO,GAEPoG,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPhB,SAAS,GAEbsB,MAAO,CACHrB,YAAa,QACbE,cAAe,CACXjF,KAAM,QACN2F,YAAa,cAEjBnG,MAAO,GAEPoG,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPhB,SAAS,GAGbuB,eAAgB,CACZtB,YAAa,SACbE,cAAe,CACXK,QAAS,CACL,CAAE9F,MAAO,OAAQgG,aAAc,gBAC/B,CAAEhG,MAAO,UAAWgG,aAAc,WAClC,CAAEhG,MAAO,WAAYgG,aAAc,cAG3ChG,MAAO,OACPoG,WAAY,GACZE,OAAO,IAIfQ,aAAa,EACb3D,SAAS,KAGb4D,aAAe,SAAAC,GACXA,EAAMC,iBAENtJ,EAAKC,SAAS,CAAEuF,SAAS,IAEzB,IAAM+D,EAAW,GAEjB,IAAK,IAAIC,KAAyBxJ,EAAKH,MAAMyI,UACzCiB,EAASC,GAAyBxJ,EAAKH,MAAMyI,UAAUkB,GAAuBnH,MAGlF,IAAMoH,EAAQ,CACVxG,YAAajD,EAAKzC,MAAM4I,KACxBhC,MAAOnE,EAAKzC,MAAM4G,MAClBuF,UAAWH,GAGf9I,EAAMkJ,KAAK,eAAgBF,GACtBG,KAAK,SAAA7H,GACFO,QAAQC,IAAIR,GAEZ/B,EAAKC,SAAS,CAAEuF,SAAS,IACzBxF,EAAKzC,MAAMwI,QAAQ8D,QAAQ,qBAC5BC,MAAM,SAAA7H,GACLK,QAAQC,IAAIN,GAEZjC,EAAKC,SAAS,CAAEuF,SAAS,IACzBxF,EAAKzC,MAAMwI,QAAQ8D,QAAQ,wBAIvCE,cAAgB,SAAC1H,EAAO2H,GACpB,IAAIC,GAAU,EAed,OAZID,EAAMtB,WACNuB,EAA2B,KAAjB5H,EAAM6H,QAAiBD,GAGjCD,EAAMlB,YACNmB,EAAU5H,EAAMwB,QAAUmG,EAAMlB,WAAamB,GAE7CD,EAAMjB,YACNkB,EAAU5H,EAAMwB,QAAUmG,EAAMjB,WAAakB,GAI1CA,KAGXE,oBAAsB,SAACd,EAAOe,GAE1B,IAAMC,EAAgBnJ,OAAAgF,EAAA,EAAAhF,CAAA,GAAQlB,EAAKH,MAAMyI,WAEnCgC,EAAkBpJ,OAAAgF,EAAA,EAAAhF,CAAA,GAAQmJ,EAAiBD,IAEjDE,EAAmBjI,MAAQgH,EAAMkB,OAAOlI,MACxCiI,EAAmB3B,MAAQ3I,EAAK+J,cAAcO,EAAmBjI,MAAOiI,EAAmB7B,YAE3F6B,EAAmB3C,SAAU,EAE7B0C,EAAiBD,GAAmBE,EAEpC,IAAInB,GAAc,EAClB,IAAK,IAAIiB,KAAmBC,EACxBlB,EAAckB,EAAiBD,GAAiBzB,OAASQ,EAG7D7G,QAAQC,IAAI4G,GAEZnJ,EAAKC,SAAS,CAAEqI,UAAW+B,EAAkBlB,YAAaA,OAG9DqB,aAAe,WACX,IAAMC,EAAc,GADHC,EAAA,SAGRrD,GACLoD,EAAYzE,KACRpI,EAAAC,EAAAC,cAAC6M,GAAD,CACIvI,IAAKiF,EACLO,YAAa5H,EAAKH,MAAMyI,UAAUjB,GAAOO,YACzCE,cAAe9H,EAAKH,MAAMyI,UAAUjB,GAAOS,cAC3CzF,MAAOrC,EAAKH,MAAMyI,UAAUjB,GAAOhF,MACnCoF,SAAUzH,EAAKH,MAAMyI,UAAUjB,GAAOsB,MACtCjB,eAAgB1H,EAAKH,MAAMyI,UAAUjB,GAAOoB,WAC5Cd,QAAS3H,EAAKH,MAAMyI,UAAUjB,GAAOM,QACrCM,QAAS,SAAAoB,GAAK,OAAIrJ,EAAKmK,oBAAoBd,EAAOhC,IAClDqB,UAAQ,MAXpB,IAAK,IAAIrB,KAASrH,EAAKH,MAAMyI,UAAWoC,EAA/BrD,GAeT,OAAOoD,2EAIP,IAAMG,EAASvK,KAAKmK,eAEhBK,EACAjN,EAAAC,EAAAC,cAAA,QAAMgN,SAAUzK,KAAK+I,cAChBwB,EAEDhN,EAAAC,EAAAC,cAACoH,GAAD,CAAQL,QAAQ,UAAUb,UAAW3D,KAAKR,MAAMsJ,aAAhD,UAOR,OAHI9I,KAAKR,MAAM2F,UACXqF,EAAOjN,EAAAC,EAAAC,cAACwI,GAAD,OAGP1I,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQZ,aACpBQ,EAAAC,EAAAC,cAAA,qCACC+M,UA9MStK,aA2NXqG,eAPS,SAAA/G,GACpB,MAAO,CACHsG,KAAMtG,EAAMoD,YACZkB,MAAOtE,EAAMsE,QAINyC,CAAyBxJ,IC7NlC2N,8MAEFC,sBAAwB,WACpBhL,EAAKzC,MAAMwI,QAAQkF,YAGvBC,wBAA0B,WACtBlL,EAAKzC,MAAMwI,QAAQ8D,QAAQ,mGAK3B,OACIjM,EAAAC,EAAAC,cAAC2B,EAAD,KACI7B,EAAAC,EAAAC,cAACqN,GAAD,CACIlI,YAAa5C,KAAK9C,MAAM4I,KACxBgB,YAAa9G,KAAK2K,sBAClB5D,cAAe/G,KAAK6K,0BACxBtN,EAAAC,EAAAC,cAACsN,EAAA,EAAD,CACIC,KAAMhL,KAAK9C,MAAM+N,MAAMD,KAAO,gBAC9BE,UAAWnO,aApBRmD,aA0CRqG,eANS,SAAA/G,GACpB,MAAO,CACHsG,KAAMtG,EAAMoD,cAIL2D,CAAyBmE,wBCZzBtB,GAlCD,SAAAlM,GACV,IAAM0F,EAAc,GAGpB,IAAK,IAAI6D,KAAkBvJ,EAAM0F,YAC7BA,EAAY+C,KACR,CACIuC,KAAMzB,EACN0E,OAAQjO,EAAM0F,YAAY6D,KAKtC,IAAM2E,EAAoBxI,EAAYC,IAAI,SAAAN,GACtC,OAAOhF,EAAAC,EAAAC,cAAA,QACHG,MAAO,CACHyN,QAAS,QACTC,cAAe,aACfC,OAAQ,iBACR1E,OAAQ,UACR2E,QAAS,SAEbzJ,IAAKQ,EAAW2F,MAAO3F,EAAW2F,KAR/B,KAQuC3F,EAAW4I,OARlD,aAWX,OACI5N,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAQX,OACpBO,EAAAC,EAAAC,cAAA,yBAAiB2N,GACjB7N,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,qBAAagO,WAAWvO,EAAM4G,OAAOC,QAAQ,OCkBpDrD,iNA1CXlB,MAAQ,CACJkM,OAAQ,GACRvG,SAAS,sFAGO,IAAAwG,EAAA3L,KAChBI,EAAMwL,IAAI,gBACLrC,KAAK,SAAA5H,GAGF,IAAMkK,EAAgB,GACtB,IAAK,IAAI9J,KAAOJ,EAAImK,KAChBD,EAAclG,KAAd9E,OAAAgF,EAAA,EAAAhF,CAAA,GAEWc,EAAImK,KAAK/J,GAFpB,CAGQgK,GAAIhK,KAKhB4J,EAAK/L,SAAS,CAAEuF,SAAS,EAAOuG,OAAQG,MAE3CpC,MAAM,SAAA7H,GACH+J,EAAK/L,SAAS,CAAEuF,SAAS,IACzBlD,QAAQC,IAAIN,sCAKpB,OACIrE,EAAAC,EAAAC,cAAA,WACKuC,KAAKR,MAAMkM,OAAO7I,IAAI,SAAAuG,GAAK,OACxB7L,EAAAC,EAAAC,cAACuO,GAAD,CACIjK,IAAKqH,EAAM2C,GACXnJ,YAAawG,EAAMxG,YACnBkB,MAAOsF,EAAMtF,kBApChB5D,aA2CmBE,GCzBzBlE,GAfH,SAAAgB,GACV,OACEK,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAQzB,KACtBqB,EAAAC,EAAAC,cAACwO,EAAD,KACE1O,EAAAC,EAAAC,cAACsN,EAAA,EAAD,KACExN,EAAAC,EAAAC,cAACsN,EAAA,EAAD,CAAOC,KAAK,kBAAkBE,UAAWrO,KACzCU,EAAAC,EAAAC,cAACsN,EAAA,EAAD,CAAOC,KAAK,UAAUE,UAAWgB,KACjC3O,EAAAC,EAAAC,cAACsN,EAAA,EAAD,CAAOC,KAAK,YAAYE,UAAWR,KACnCnN,EAAAC,EAAAC,cAACsN,EAAA,EAAD,CAAUoB,KAAK,IAAIhO,GAAG,iCChB1BiO,GAAe,CACjBxJ,YAAa,CACTyJ,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAEVvH,WAAY,GAIVwH,GAAoB,CACtBJ,MAAO,GACPE,OAAQ,GACRC,KAAM,IACNF,MAAO,IA6BII,GA1BC,WAAkC,IAAjClN,EAAiCmN,UAAAnJ,OAAA,QAAAoJ,IAAAD,UAAA,GAAAA,UAAA,GAAzBP,GAAcS,EAAWF,UAAAnJ,OAAA,EAAAmJ,UAAA,QAAAC,EAC9C,OAAQC,EAAOrK,MACX,IRtBsB,iBQuBlB,OAAO3B,OAAAgF,EAAA,EAAAhF,CAAA,GACArB,EADP,CAEIoD,YAAY/B,OAAAgF,EAAA,EAAAhF,CAAA,GACLrB,EAAMoD,YADF/B,OAAAiM,GAAA,EAAAjM,CAAA,GAGNgM,EAAOnG,QAAQD,iBAAmBjH,EAAMoD,YAAYiK,EAAOnG,QAAQD,kBAExExB,WAAYzF,EAAMyF,WAAawH,GAAkBI,EAAOnG,QAAQD,kBAExE,IR/ByB,oBQgCrB,OAAO5F,OAAAgF,EAAA,EAAAhF,CAAA,GACArB,EADP,CAEIoD,YAAY/B,OAAAgF,EAAA,EAAAhF,CAAA,GACLrB,EAAMoD,YADF/B,OAAAiM,GAAA,EAAAjM,CAAA,GAENgM,EAAOnG,QAAQD,iBAAmBjH,EAAMoD,YAAYiK,EAAOnG,QAAQD,kBAExExB,WAAYzF,EAAMyF,WAAawH,GAAkBI,EAAOnG,QAAQD,kBAExE,QACI,OAAOjH,IC9BCuN,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjC,MACvB,2DCPN,IAAMkC,GAAQC,YAAYV,IAEpBW,GACF9P,EAAAC,EAAAC,cAAC6P,EAAA,EAAD,CAAUH,MAAOA,IACb5P,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACIX,EAAAC,EAAAC,cAAC8P,GAAD,QAKZC,IAASC,OAAOJ,GAAKK,SAASC,eAAe,SD4GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvE,KAAK,SAAAwE,GACjCA,EAAaC","file":"static/js/main.c27c2d0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop__10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1__3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2__1cUso\",\"Meat\":\"BurgerIngredient__Meat__13nAN\",\"Cheese\":\"BurgerIngredient__Cheese__1FxeY\",\"Salad\":\"BurgerIngredient__Salad__1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon__3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__21TuB\",\"Open\":\"SideDrawer__Open__1pVYR\",\"Close\":\"SideDrawer__Close__3Yv1l\",\"Logo\":\"SideDrawer__Logo__3TkPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\",\"ValidationError\":\"Input__ValidationError__1ElSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2JJW-\",\"Logo\":\"Toolbar__Logo__1efBD\",\"DesktopOnly\":\"Toolbar__DesktopOnly__WADUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\",\"show\":\"Modal__show__2I0kq\",\"doNotShow\":\"Modal__doNotShow__a11_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderSummary__header\":\"OrderSummary__OrderSummary__header__2RPJ-\",\"OrderSummary__body\":\"OrderSummary__OrderSummary__body__1eC0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout__2C2_c\",\"content\":\"Layout__content__2uzgd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__2NQx7\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__19WaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__23bcu\",\"active\":\"NavigationItem__active__2zJdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems___yd_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__26to0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner__Spinner__1fiyk\",\"sk-rotateplane\":\"Spinner__sk-rotateplane__28ili\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BurgerBuilder\":\"BurgerBuilder__BurgerBuilder__1gdQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1J81r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\"};","// Auxiliary component that returns elements wrapped within.\nconst aux = props => props.children;\n\nexport default aux;","import React from 'react'\n\n// Returns a wrapped a component with a given style class.\n// the component has its properties and content preserved.  \nconst withClass = (WrappedComponent, className) => {\n    return props => (\n        <div className={className}>\n            <WrappedComponent {...props} />\n        </div>\n    );\n}\n\nexport default withClass;\n","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png';\n\nimport classes from './Logo.css';\n\nconst logo = props => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={burgerLogo} alt=\"Burger Logo\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.css';\n\nconst navigationItem = props => (\n    <li className={classes.NavigationItem}>\n        <NavLink to={props.link} exact={props.exact}> {/*activeClassName={classes.active} makes the link looks 'active' by default*/}\n            {props.children}\n        </NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nimport classes from './NavigationItems.css';\n\nconst navigationItems = props => ( // first item activated by default\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/burger-builder\">Burger Builder</NavigationItem>\n        <NavigationItem link=\"/orders\" exact>Orders</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.css';\n\nconst drawerToggle = props => (\n    <div\n        className={classes.DrawerToggle}\n        onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nimport classes from './Toolbar.css';\n\nconst toolbar = props => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.toggle}>Menu</DrawerToggle>\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        \n        <nav className={classes.DesktopOnly}>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport classes from './Backdrop.css';\n\nconst backdrop = props => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nimport classes from './SideDrawer.css';\n\nconst sideDrawer = props => {\n    let attachedClass = [classes.SideDrawer, classes.Close];\n\n    if (props.open) attachedClass =  [classes.SideDrawer, classes.Open];\n\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n\n            <div className={attachedClass.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\n\nimport classes from './Layout.css';\n\nimport Aux from '../Aux/Aux';\nimport withClass from '../WithClass/withClass';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({ showSideDrawer: false });\n    }\n\n    // negates previous 'showSideDrawer' from the state\n    sideDrawerToggleHandler = () => {\n        this.setState( prevState => { return {showSideDrawer: !prevState.showSideDrawer} });\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Toolbar toggle={this.sideDrawerToggleHandler} />\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler} />\n                <header><p>SideDrawer</p></header>\n                <main className={classes.content}>{this.props.children}</main>\n                <footer>Burger Builder © 2019 by Lypzis.</footer>\n            </Aux>\n        );\n    }\n}\n\nexport default withClass(Layout, classes.Layout);","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://burguerbuilderapi.firebaseio.com/'\n});\n\nexport default instance;","import React, { Component } from 'react';\n\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nimport classes from './Modal.css';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    /*\n    componentWillUpdate() {\n        console.log('[Modal.js] will update')\n    } */\n\n    render() {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClose} />\n                <div className={[classes.Modal, this.props.show ? classes.show : classes.doNotShow].join(' ')}>\n                    {this.props.children}\n                </div>\n            </Aux >\n        );\n    }\n};\n\nexport default Modal;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\n// Global error handler, which can wrapps any component using axios\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n\n        // this needs to execute before everything else, that is why a constructor is used here\n        constructor() {\n            super();\n\n            this.state = {\n                error: null\n            }\n\n            // dynamically handles 'error state' if there was error while making a request\n            // setting it to be the error returned, else is set to/remains null\n            // sets error state to null, then returns request\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({ error: null });\n\n                return req;\n            });\n\n            // returns response, else, sets error state to the error ocurred\n            this.resInterceptor = axios.interceptors.response.use(res => res, err => {\n                this.setState({ error: err });\n            });\n        }\n\n        // When this component is not needed, eject interceptors to free memory\n        componentWillUnmount() {\n            console.log('Will it unmount ?')\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.request.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({ error: null });\n        }\n\n        render() {\n            return ( // render error modal, in case there is an error\n                <Aux>\n                    <Modal\n                        show={this.state.error}\n                        modalClose={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.css';\n\nclass BurgerIngredient extends Component { // Pure component???\n\n    render() {\n        let ingredient = null;\n\n        switch ( this.props.type ) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n            case ('salad'):\n                ingredient = <div className={classes.Salad}></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className={classes.Bacon}></div>;\n                break;\n            default: ingredient = null;\n        }\n\n        return ingredient;\n    }\n};\n\n// ensures that the property type must be a string and is required.\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport classes from './Burger.css';\n\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = props => {\n    let transformedIngredients = Object.keys(props.ingredients).map(ingKey => {\n        // returns an array of the respective ingredient value.\n        // the \"Array()\" method will create something like [cheese, cheese], \n        // which is the given number value for that ingredient\n        return [...Array(props.ingredients[ingKey])].map((_, index) =>  // then, maps them/it into components \n            <BurgerIngredient key={ingKey + index} type={ingKey} />\n        );// \"Object.keys\" turns an object's keys into an array\n    }).reduce((arr, el) => { // reduce gets each element of the array, parameters are the accumulator and current element \n        return arr.concat(el);\n    }, []); // initial value\n\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please, add some ingredients! :D</p>\n    };\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type='bread-top' />\n            {transformedIngredients}\n            <BurgerIngredient type='bread-bottom' />\n        </div>\n    );\n}\n\nexport default withRouter(burger); ","import React from 'react';\n\nimport Aux from '../../../../hoc/Aux/Aux';\nimport withClass from '../../../../hoc/WithClass/withClass';\n\nimport classes from './BuildControl.css';\n\nconst buildControl = props => ( // disabled accepts true or false, property from React\n    <Aux>\n        <div className={classes.Label}>{props.label}</div>\n        <button\n            className={classes.Less}\n            onClick={props.remove}\n            disabled={props.disabled}>Less</button>\n        <button\n            className={classes.More}\n            onClick={props.add}>More</button>\n    </Aux>\n);\n\nexport default withClass(buildControl, classes.BuildControl);","import React from 'react';\n\nimport Aux from '../../../hoc/Aux/Aux';\nimport withClass from '../../../hoc/WithClass/withClass';\nimport BuildControl from './BuildControl/BuildControl';\n\nimport classes from './BuildControls.css';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n    // ...\n];\n\nconst buildControls = props => ( // to fixed will fix the price value to have only two number after the dot.\n    <Aux>\n        <p>Current Price: <strong>${props.price.toFixed(2)}</strong></p>\n        {\n            controls.map(control => <BuildControl\n                key={control.label}\n                label={control.label}\n                add={props.addIngredient.bind(this, control.type)}\n                remove={props.removeIngredient.bind(this, control.type)}\n                disabled={props.disabled[control.type]} />\n            )\n        }\n        <button\n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}>ORDER NOW</button>\n    </Aux>\n);\n\nexport default withClass(buildControls, classes.BuildControls);","import React from 'react';\n\nimport classes from './Button.css';\n\nconst button = props => (\n    <button\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        disabled={props.disabled}\n        onClick={props.clicked}>\n        {props.children}\n    </button>\n);\n\nexport default button;","import React, { Component } from 'react';\n\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nimport classes from './OrderSummary.css';\n\nclass OrderSummary extends Component {\n\n    // This could be a functional component\n    /*\n    componentWillUpdate() {\n        console.log('[OrderSummary.js] will update');\n    } */\n\n    render() {\n        const ingredientSummary = Object.keys(this.props.ingredients)\n            .map(ingredientKey =>\n                <li key={ingredientKey}>\n                    <span className={classes.span}>{ingredientKey}</span>: {this.props.ingredients[ingredientKey]}\n                </li>);\n\n        return (\n            <Aux>\n                <h3 className={classes.OrderSummary__header}>Your Order</h3>\n\n                <div className={classes.OrderSummary__body}>\n                    <p>A delicious burger with the following ingredients: </p>\n\n                    <ul>\n                        {ingredientSummary}\n                    </ul>\n                    <p><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\n                    <p>Continue to checkout?</p>\n                </div>\n\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancel}>Cancel</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinue}>Continue</Button>\n            </Aux>\n        );\n    }\n};\n\nexport default OrderSummary;","import React from 'react';\n\nimport classes from './Spinner.css';\n\nconst spinner = () => <div className={classes.Spinner}></div>;\n\nexport default spinner;","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport axios from '../../axios';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actionTypes from '../../store/actions';\n\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nimport classes from './BurgerBuilder.css';\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        ingredients: null,\n        totalPrice: 4,\n        \n        // local UI state, it is not necessary to be managed by redux\n        purchasing: false,\n        loading: false,\n        error: false\n    };\n\n    // setting up state with data from server\n    async componentDidMount() {\n/*\n        try {\n            const response = await axios.get('/ingredients.json');\n\n            this.setState({\n                ingredients: {\n                    salad: response.data.salad,\n                    bacon: response.data.bacon,\n                    cheese: response.data.cheese,\n                    meat: response.data.meat\n                }\n            });\n        } catch (err) {\n            //console.log(err);\n\n            this.setState({ error: true });\n        }*/\n    }\n\n    /**\n     * Updates the 'purchasable' attribute of the state to true if total value of ingredients\n     * is greater than 0, else remains or is returned to false;\n     */\n    updatePurchaseState = ingredients => {\n        const total = Object.keys(ingredients)\n            .map(ingredientKey => ingredients[ingredientKey]) //maps keys, returning the specific ingredient values from const 'ingredients'\n            .reduce((total, ingreditentValue) => total + ingreditentValue, 0);  // then sums it to a total. initial value is 0\n\n        return total > 0; // true if at least 1 ingredient is added to the burger\n    }\n\n    /**\n     * Sets 'purchasing' to true\n     */\n    purchaseHandler = () => {\n        this.setState({ purchasing: true });\n    }\n\n    /**\n     * Sets 'purchasing' to true\n     */\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false });\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.history.push('/checkout');\n    }\n\n    render() {\n        const disabledInfo = { ...this.props.ings };\n\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0; // replaces values with true or false if it attends the condition\n        }\n\n        let orderSummary = null;\n        let burger = this.state.error ? <p>Sorry, something is preventing the page from loading... :(</p> : <Spinner />\n\n        if (this.props.ings) {\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseContinue={this.purchaseContinueHandler}\n                purchaseCancel={this.purchaseCancelHandler} />;\n\n            burger = <Aux>\n                <div className={classes.BurgerBuilder}>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        disabled={disabledInfo}\n                        price={this.props.price}\n                        purchasable={this.updatePurchaseState(this.props.ings)} // in this case, I want it to automatically execute at render\n                        ordered={this.purchaseHandler}\n                        addIngredient={this.props.onAddIngredient}\n                        removeIngredient={this.props.onRemoveIngredient} />\n                </div>\n            </Aux>;\n        }\n\n        if (this.state.loading) orderSummary = <Spinner />;\n\n        return ( // The Modal and its related content will only if purchasing is true\n            <Aux>\n                <Modal show={this.state.purchasing} modalClose={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        price: state.totalPrice\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddIngredient: ingredientName => dispatch({\n            type: actionTypes.ADD_INGREDIENT, \n            payload: {ingredientName: ingredientName}\n        }),\n        onRemoveIngredient: ingredientName => dispatch({\n            type: actionTypes.REMOVE_INGREDIENT,\n            payload: {ingredientName: ingredientName}\n        })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\n\nimport classes from './CheckoutSummary.css';\n\nconst checkoutSummary = props => {\n\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes good!</h1>\n\n            <div style={{ width: '100%', margin: 'auto' }}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n\n            <Button btnType=\"Danger\" clicked={props.cancelOrder}>Cancel</Button>\n            <Button btnType=\"Success\" clicked={props.continueOrder}>Continue</Button>\n        </div>\n    );\n};\n\nexport default checkoutSummary;","import React from 'react';\n\nimport classes from './Input.css';\n\nconst input = props => {\n    let inputElement = null;\n    let validationError = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched)\n        inputClasses.push(classes.Invalid);\n\n    if (props.invalid && props.touched)\n        validationError = <p className={classes.ValidationError}>Please enter a valid value!</p>\n\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                defaultValue={props.value} onChange={props.changed} />\n            break;\n        case ('textarea'):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                defaultValue={props.value} onChange={props.changed} />\n            break;\n        case ('select'):\n            const selectOptions = props.elementConfig.options.map(option => {\n                return <option key={option.value} value={option.value}>{option.displayValue}</option>\n            });\n\n            inputElement = <select className={inputClasses.join(' ')} onChange={props.changed}>\n                {selectOptions}\n            </select>\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                defaultValue={props.value} onChange={props.changed} />\n    }\n\n    return (\n        <div className={inputClasses.join(' ')}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n            {validationError}\n        </div>\n    );\n}\n\nexport default input;","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nimport axios from '../../../axios';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\nimport classes from './ContactData.css';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Street'\n                },\n                value: '',\n\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Zip Code'\n                },\n                value: '',\n\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Country'\n                },\n                value: '',\n\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your Email'\n                },\n                value: '',\n\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: 'none', displayValue: '-- Select --' },\n                        { value: 'fastest', displayValue: 'Fastest' },\n                        { value: 'cheapest', displayValue: 'Cheapest' },\n                    ]\n                },\n                value: 'none',\n                validation: {},\n                valid: false\n            },\n\n        },\n        formIsValid: false,\n        loading: false\n    }\n\n    orderHandler = event => {\n        event.preventDefault();\n\n        this.setState({ loading: true });\n\n        const formData = {};\n\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price, // this should be checked in backend to see if it is not being manipulated\n            orderData: formData\n        };\n\n        axios.post('/orders.json', order) // firebase syntax requires '.json', you can simulate an error by removing it :D\n            .then(response => {\n                console.log(response);\n\n                this.setState({ loading: false });\n                this.props.history.replace('/burger-builder');\n            }).catch(err => {\n                console.log(err);\n\n                this.setState({ loading: false });\n                this.props.history.replace('/burger-builder');\n            });\n    }\n\n    checkValidity = (value, rules) => {\n        let isValid = true; // starts as valid\n\n        // depends on which rules we have\n        if (rules.required)\n            isValid = value.trim() !== '' && isValid; // basically checking if field value is empty or filled with white spaces\n\n        // another example\n        if (rules.minLength)\n            isValid = value.length >= rules.minLength && isValid;\n\n        if (rules.maxLength)\n            isValid = value.length <= rules.maxLength && isValid;\n\n        // passing 'isValid' to all the verifications will make sure that if\n        // it gets reproved in one of them, it won't pass in any other.\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        // Here order form is cloned superficially\n        const updatedOrderForm = { ...this.state.orderForm };\n        // And down here its objects are deeply cloned, for safely changing 'value'\n        const updatedFormElement = { ...updatedOrderForm[inputIdentifier] };\n\n        updatedFormElement.value = event.target.value; // so the value is updated here\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n\n        updatedFormElement.touched = true;\n\n        updatedOrderForm[inputIdentifier] = updatedFormElement; // and then updated to the cloned form\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid; // :D, remember if one is false, everything is!\n        }\n\n        console.log(formIsValid);\n\n        this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\n    }\n\n    renderInputs = () => {\n        const accumulator = [];\n\n        for (let input in this.state.orderForm) {\n            accumulator.push(\n                <Input\n                    key={input}\n                    elementType={this.state.orderForm[input].elementType}\n                    elementConfig={this.state.orderForm[input].elementConfig}\n                    value={this.state.orderForm[input].value}\n                    invalid={!this.state.orderForm[input].valid}\n                    shouldValidate={this.state.orderForm[input].validation}\n                    touched={this.state.orderForm[input].touched}\n                    changed={event => this.inputChangedHandler(event, input)}\n                    required />\n            );\n        }\n\n        return accumulator;\n    }\n\n    render() {\n        const inputs = this.renderInputs();\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {inputs}\n                {/* button to submit form is disable if form is not valid */}\n                <Button btnType=\"success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n\n        if (this.state.loading)\n            form = <Spinner />;\n\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        price: state.price\n    }\n}\n\nexport default connect(mapStateToProps)(ContactData);","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\n    cancelCheckoutHandler = () => {\n        this.props.history.goBack(); //goes back to the last page, duh :D\n    }\n\n    continueCheckoutHandler = () => {\n        this.props.history.replace('/checkout/contact-data'); //replaces current url\n    }\n\n    render() {\n\n        return (\n            <Aux>\n                <CheckoutSummary\n                    ingredients={this.props.ings} //this.props.location.ingredients\n                    cancelOrder={this.cancelCheckoutHandler}\n                    continueOrder={this.continueCheckoutHandler} />\n                <Route\n                    path={this.props.match.path + '/contact-data'}\n                    component={ContactData}\n\n                    /*Still renders the component with \n                the advantage of being able to pass props to it :D\n                    render={props => (\n                        <ContactData\n                            ingredients={this.state.ingredients}\n                            price={this.state.totalPrice}\n                            {...props} />  distribute properties from this component to 'ContactData'\n                    )} */\n                    />\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n    }\n}\n\nexport default connect(mapStateToProps)(Checkout); // \"dispatched to props\" ommited since there is nothing to dispatch here. Can just pass 'null' as well","import React from 'react';\n\nimport classes from './Order.css';\n\nconst order = props => {\n    const ingredients = [];\n\n    // alternative to Object.Keys... inside Burger.js\n    for (let ingredientName in props.ingredients) {\n        ingredients.push(\n            {\n                name: ingredientName, // the attribute name\n                amount: props.ingredients[ingredientName], // the value of the attribute\n            }\n        )\n    }\n\n    const ingredientsOutput = ingredients.map(ingredient => {\n        return <span\n            style={{\n                display: 'block',\n                textTransform: 'capitalize',\n                border: '1px solid #ccc',\n                margin: '.8rem 0',\n                padding: '.5rem'\n            }}\n            key={ingredient.name}>{ingredient.name} ({ingredient.amount})&emsp;</span>\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientsOutput}</p>\n            <p>Price: <strong>USD {parseFloat(props.price).toFixed(2)}</strong></p>\n\n        </div>\n    )\n};\n\nexport default order;","import React, { Component } from 'react';\n\nimport axios from '../../axios';\nimport Order from '../../components/Order/Order';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n\n    componentDidMount() {\n        axios.get('/orders.json')\n            .then(res => {\n                //console.log(res.data);\n                // to turn multiple objects into one array\n                const fetchedOrders = []; // this will hold order objects\n                for (let key in res.data) {\n                    fetchedOrders.push(\n                        {\n                            ...res.data[key], // this will distribute all attributes to the object being pushed\n                            id: key     // and this will make sure that we won't lose its key\n                        }\n                    );\n                }\n\n                this.setState({ loading: false, orders: fetchedOrders });\n            })\n            .catch(err => {\n                this.setState({ loading: false });\n                console.log(err);\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.orders.map(order =>\n                    <Order\n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price} />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withErrorHandler(Orders, axios);","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport classes from './App.css';\n\nimport Layout from '../hoc/Layout/Layout';\nimport BurgerBuilder from './BurgerBuilder/BurgerBuilder';\nimport Checkout from './Checkout/Checkout';\nimport Orders from './Orders/Orders';\n\nconst App = props => {\n  return (\n    <div className={classes.App} >\n      <Layout>\n        <Switch>\n          <Route path=\"/burger-builder\" component={BurgerBuilder} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/checkout\" component={Checkout} />\n          <Redirect from=\"/\" to=\"/burger-builder\" />\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import * as actionTypes from './actions';\n\nconst initialState = {\n    ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n    },\n    totalPrice: 4,\n}\n\n//Global constants are named entirely in capital letters\nconst INGREDIENT_PRICES = {\n    salad: .5,\n    cheese: .6,\n    meat: 1.4,\n    bacon: .8\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients, // deep clone of ingredients already on the burger, remember\n                    // key: increment value of respective key, which is the ingrediente I want to add\n                    [action.payload.ingredientName]: ++state.ingredients[action.payload.ingredientName] \n                },\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.payload.ingredientName]\n            };\n        case actionTypes.REMOVE_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.payload.ingredientName]: --state.ingredients[action.payload.ingredientName]\n                },\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.payload.ingredientName]\n            };\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport './index.css';\nimport App from './containers/App';\nimport reducer from './store/reducer';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}