{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Modal/Modal.css","components/Layout/Layout.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","containers/App.css","components/Burger/Burger.css","components/UI/Backdrop/Backdrop.css","hoc/Aux.js","hoc/withClass.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","BuildControl","Label","Less","More","Modal","show","doNotShow","Layout","content","BuildControls","OrderButton","Button","Success","Danger","App","Burger","Backdrop","aux","props","children","withClass","WrappedComponent","className","react_default","a","createElement","Aux","classes","BurgerIngredient","ingredient","this","type","Component","burger","transformedIngredients","Object","keys","ingredients","map","ingKey","toConsumableArray","Array","_","index","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","label","onClick","remove","disabled","add","controls","price","toFixed","control","BuildControl_BuildControl","addIngredient","bind","removeIngredient","purchasable","ordered","backdrop","clicked","modal","Backdrop_Backdrop","modalClose","join","button","btnType","orderSummary","ingredientSummary","ingredientKey","span","Button_Button","purchaseCancel","purchaseContinue","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","purchasing","updatePurchaseState","updatedIngredients","total","ingreditentValue","_this","setState","updateBurger","ingredientsCount","objectSpread","addIngredientHandler","updatedCount","newPrice","removeIngredientHandler","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","alert","disabledInfo","Modal_Modal","OrderSummary_OrderSummary","Burger_Burger","BuildControls_BuildControls","Layout_Layout","containers_BurgerBuilder_BurgerBuilder","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70089cad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop__10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1__3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2__1cUso\",\"Meat\":\"BurgerIngredient__Meat__13nAN\",\"Cheese\":\"BurgerIngredient__Cheese__1FxeY\",\"Salad\":\"BurgerIngredient__Salad__1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon__3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\",\"show\":\"Modal__show__2I0kq\",\"doNotShow\":\"Modal__doNotShow__a11_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout__1SGjM\",\"content\":\"Layout__content__ciN7r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__2NQx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\"};","// Auxiliary component that returns elements wrapped within.\nconst aux = props => props.children;\n\nexport default aux;","import React from 'react'\n\n// Returns a wrapped a component with a given style class.\n// the component has its properties and content preserved.  \nconst withClass = (WrappedComponent, className) => {\n    return props => (\n        <div className={className}>\n            <WrappedComponent {...props} />\n        </div>\n    );\n}\n\nexport default withClass;\n","import React from 'react';\n\nimport classes from './Layout.css';\n\nimport Aux from '../../hoc/Aux';\nimport withClass from '../../hoc/withClass';\n\nconst layout = props => {\n    return (\n        <Aux>\n            <header><p>Toolbar, SideDrawer, Backdrop</p></header>\n            <main className={classes.content}>{props.children}</main>\n            <footer>Burger Builder © 2019 by Lypzis.</footer>\n        </Aux>\n    );\n}\n\nexport default withClass(layout, classes.Layout);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.css';\n\nclass BurgerIngredient extends Component { // Pure component???\n\n    render() {\n        let ingredient = null;\n\n        switch ( this.props.type ) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n            case ('salad'):\n                ingredient = <div className={classes.Salad}></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className={classes.Bacon}></div>;\n                break;\n            default: ingredient = null;\n        }\n\n        return ingredient;\n    }\n};\n\n// ensures that the property type must be a string and is required.\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport classes from './Burger.css';\n\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = props => {\n    let transformedIngredients = Object.keys(props.ingredients).map(ingKey => {\n        // returns an array of the respective ingredient value.\n        // the \"Array()\" method will create something like [cheese, cheese], \n        // which is the given number value for that ingredient\n        return [...Array(props.ingredients[ingKey])].map((_, index) =>  // then, maps them/it into components \n            <BurgerIngredient key={ingKey + index} type={ingKey} />\n        );// \"Object.keys\" turns an object's keys into an array\n    }).reduce((arr, el) => { // reduce gets each element of the array, parameters are the accumulator and current element \n        return arr.concat(el);\n    }, []); // initial value\n\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please, add some ingredients! :D</p>\n    };\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type='bread-top' />\n            {transformedIngredients}\n            <BurgerIngredient type='bread-bottom' />\n        </div>\n    );\n}\n\nexport default burger; ","import React from 'react';\n\nimport Aux from '../../../../hoc/Aux';\nimport withClass from '../../../../hoc/withClass';\n\nimport classes from './BuildControl.css';\n\nconst buildControl = props => ( // disabled accepts true or false, property from React\n    <Aux>\n        <div className={classes.Label}>{props.label}</div>\n        <button\n            className={classes.Less}\n            onClick={props.remove}\n            disabled={props.disabled}>Less</button>\n        <button\n            className={classes.More}\n            onClick={props.add}>More</button>\n    </Aux>\n);\n\nexport default withClass(buildControl, classes.BuildControl);","import React from 'react';\n\nimport Aux from '../../../hoc/Aux';\nimport withClass from '../../../hoc/withClass';\nimport BuildControl from './BuildControl/BuildControl';\n\nimport classes from './BuildControls.css';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n    // ...\n];\n\nconst buildControls = props => ( // to fixed will fix the price value to have only two number after the dot.\n    <Aux>\n        <p>Current Price: <strong>${props.price.toFixed(2)}</strong></p>\n        {\n            controls.map(control => <BuildControl\n                key={control.label}\n                label={control.label}\n                add={props.addIngredient.bind(this, control.type)}\n                remove={props.removeIngredient.bind(this, control.type)}\n                disabled={props.disabled[control.type]} />\n            )\n        }\n        <button\n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}>ORDER NOW</button>\n    </Aux>\n);\n\nexport default withClass(buildControls, classes.BuildControls);","import React from 'react';\n\nimport classes from './Backdrop.css';\n\nconst backdrop = props => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Aux from '../../../hoc/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nimport classes from './Modal.css';\n\nconst modal = props => (\n    <Aux>\n        <Backdrop show={props.show} clicked={props.modalClose}/>\n        <div className={[classes.Modal, props.show ? classes.show : classes.doNotShow].join(' ')}>\n            {props.children}\n        </div>\n    </Aux>\n);\n\nexport default modal;","import React from 'react';\n\nimport classes from './Button.css';\n\nconst button = props => (\n    <button\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>\n        {props.children}\n    </button>\n);\n\nexport default button;","import React from 'react';\n\nimport Aux from '../../../hoc/Aux';\nimport Button from '../../UI/Button/Button';\n\nimport classes from './OrderSummary.css';\n\nconst orderSummary = props => {\n    const ingredientSummary = Object.keys(props.ingredients)\n        .map(ingredientKey => \n        <li key={ingredientKey}>\n            <span className={classes.span}>{ingredientKey}</span>: {props.ingredients[ingredientKey]}\n        </li>);\n\n    return (\n        <Aux>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients: </p>\n\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p>Continue to checkout?</p>\n            <Button btnType=\"Danger\" clicked={props.purchaseCancel}>Cancel</Button>\n            <Button btnType=\"Success\" clicked={props.purchaseContinue}>Continue</Button>\n        </Aux>\n    )\n};\n\nexport default orderSummary;","import React, { Component } from 'react';\n\nimport Aux from '../../hoc/Aux';\n\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\n\n//Global constants are named entirely in capital letters\nconst INGREDIENT_PRICES = {\n    salad: .5,\n    cheese: .6,\n    meat: 1.4,\n    bacon: .8\n};\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4,\n        purchasable: false,\n        purchasing: false\n    };\n\n    /**\n     * Updates the 'purchasable' attribute of the state to true if total value of ingredients\n     * is greater than 0, else remains or is returned to false;\n     * @param {Object} updatedIngredients Up to date copy of this.state.ingredients;\n     */\n    updatePurchaseState = updatedIngredients => {\n        const total = Object.keys(updatedIngredients)\n            .map(ingredientKey => updatedIngredients[ingredientKey]) //maps keys, returning the specific ingredient values from const 'ingredients'\n            .reduce((total, ingreditentValue) => total + ingreditentValue, 0);  // then sums it to a total. initial value is 0\n\n        this.setState({ purchasable: total > 0 }); // true if at least 1 ingredient is added to the burger\n    }\n\n    /**\n     * Updates one of the 'ingredients' amount\n     * @param {object} ingredients\n     * @param {float} totalPrice\n     * @param {string} type\n     */\n    updateBurger = (ingredientsCount, totalPrice, type) => {\n        const updatedIngredients = {\n            ...this.state.ingredients // fill this object with this.state.ingredients attributes\n        };                            // it becomes a copy of the current state\n\n        updatedIngredients[type] = ingredientsCount; // update the respective ingredient value\n\n        this.setState({\n            ingredients: updatedIngredients,\n            totalPrice\n        });\n\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    /**\n     * Adds an ingredient\n     * @param {string} type \n     */\n    addIngredientHandler = type => {\n        const updatedCount = this.state.ingredients[type] + 1;\n        const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n\n        this.updateBurger(updatedCount, newPrice, type);\n    }\n\n    /**\n     * Removes an ingredient\n     * - Has prevention against negative values.\n     * @param {string} type \n     */\n    removeIngredientHandler = type => {\n        const updatedCount = this.state.ingredients[type] - 1;\n        const newPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\n\n        if (updatedCount >= 0) // ...or equals 0 ??? arrays start on 0, duh!\n            this.updateBurger(updatedCount, newPrice, type);\n    }\n\n    /**\n     * Sets 'purchasing' to true\n     */\n    purchaseHandler = () => {\n        this.setState({ purchasing: true });\n    }\n\n    /**\n     * Sets 'purchasing' to true\n     */\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false });\n    }\n\n    purchaseContinueHandler = () => {\n        alert('You Continue! :D');\n    }\n\n    render() {\n        const disabledInfo = { ...this.state.ingredients };\n\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0; // replaces values with true or false if it attends the condition\n        }\n\n        return ( // The Modal and its related content will only if purchasing is true\n            <Aux>\n                <Modal show={this.state.purchasing} modalClose={this.purchaseCancelHandler}>\n                    <OrderSummary\n                        purchaseContinue={this.purchaseContinueHandler}\n                        purchaseCancel={this.purchaseCancelHandler}\n                        ingredients={this.state.ingredients} />\n                </Modal>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls\n                    addIngredient={this.addIngredientHandler}\n                    removeIngredient={this.removeIngredientHandler}\n                    disabled={disabledInfo}\n                    price={this.state.totalPrice}\n                    purchasable={this.state.purchasable}\n                    ordered={this.purchaseHandler} />\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;","import React from 'react';\nimport classes from './App.css';\n\nimport Layout from '../components/Layout/Layout';\nimport BurgerBuilder from './BurgerBuilder/BurgerBuilder';\n\nfunction App() {\n  return (\n    <div className={classes.App}>\n      <Layout>\n        <BurgerBuilder />\n      </Layout>    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}